spring 定时器 
1.需要的jar包:
	jta.jar 会用到包中的usertransaction, 
	quartz-1.6.0.jar 会用到CronTrigger这个类，通过表达式实现精确的定时
	slf4j-api.jar
	slf4j-log4j12.jar
	commons-logging-1.1.1.jar 日志管理包
	commons-collections-3.2.1.jar 集合工具包
	
2.applicationContext.xml 配置：
	<!-- 定时器 start -->
	<bean id="timer" class="com.sooncode.subassembly.timer.Timer"></bean>
    <!-- 定时器配置 -->
	<bean id="timeDitail"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="timer"></property><!-- 指定任务类 -->
		<property name="targetMethod" value="doSome"></property><!-- 指定任务方法 -->
	</bean>
	<!-- 定义时间间隔触发器 --> 
	<bean id="cronTriggerBean" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="timeDitail"></property>
		<property name="cronExpression">
			<value>*/5 * * * * ?</value>
		</property>
	</bean>
	 <!-- 启动定时器 -->
	<bean id="startJob"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="cronTriggerBean" />
			</list>
		</property>
	</bean>
 
	<!-- 定时器 end -->
	
3.web.xml 配置：
<!-- 定时器监听 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

二 注释方式 实现 
1.applicationContext.xml 添加 :
    (1) xmlns:task="http://www.springframework.org/schema/task 
    (2) http://www.springframework.org/schema/task  http://www.springframework.org/schema/task/spring-task-3.1.xsd
2.添加扫描器
    <task:annotation-driven/>  
    <context:component-scan base-package="cn.yjkjedu.goodstudent.subassembly.timer"/> //定时器所在的包范围
3.在定时器的方法上 添加注释:
  @Scheduled(cron = "0/5 * *  * * ? ")
 

4.定时器的时间表达式：
 
字段 允许值 允许的特殊字符   
秒 0-59 , - * /   
分 0-59 , - * /   
小时 0-23 , - * /   
日期 1-31 , - * ? / L W C   
月份 1-12 或者 JAN-DEC , - * /   
星期 1-7 或者 SUN-SAT , - * ? / L C #   
年（可选） 留空, 1970-2099 , - * /   
表达式意义   
"0 0 12 * * ?" 每天中午12点触发   
"0 15 10 ? * *" 每天上午10:15触发   
"0 15 10 * * ?" 每天上午10:15触发   
"0 15 10 * * ? *" 每天上午10:15触发   
"0 15 10 * * ? 2005" 2005年的每天上午10:15触发   
"0 * 14 * * ?" 在每天下午2点到下午2:59期间的每1分钟触发   
"0 0/5 14 * * ?" 在每天下午2点到下午2:55期间的每5分钟触发   
"0 0/5 14,18 * * ?" 在每天下午2点到2:55期间和下午6点到6:55期间的每5分钟触发   
"0 0-5 14 * * ?" 在每天下午2点到下午2:05期间的每1分钟触发   
"0 10,44 14 ? 3 WED" 每年三月的星期三的下午2:10和2:44触发   
"0 15 10 ? * MON-FRI" 周一至周五的上午10:15触发   
"0 15 10 15 * ?" 每月15日上午10:15触发   
"0 15 10 L * ?" 每月最后一日的上午10:15触发   
"0 15 10 ? * 6L" 每月的最后一个星期五上午10:15触发   
"0 15 10 ? * 6L 2002-2005" 2002年至2005年的每月的最后一个星期五上午10:15触发   
"0 15 10 ? * 6#3" 每月的第三个星期五上午10:15触发   
每天早上6点   
0 6 * * *   
每两个小时   ---> "0 */120 * * * ?"

晚上11点到早上8点之间每两个小时，早上八点   
0 23-7/2，8 * * *   
每个月的4号和每个礼拜的礼拜一到礼拜三的早上11点   
0 11 4 * 1-3   
1月1日早上4点   
0 4 1 1 *   
有些子表达式能包含一些范围或列表  
例如：子表达式（天（星期））可以为 “MON-FRI”，“MON，WED，FRI”，“MON-WED,SAT”  
“*”：字符代表所有可能的值  
因此，“*”在子表达式（月）里表示每个月的含义，“*”在子表达式（天（星期））表示星期的每一天  
“/”：字符用来指定数值的增量  
例如：在子表达式（分钟）里的“0/15”表示从第0分钟开始，每15分钟 ; 
在子表达式（分钟）里的“3/20”表示从第3分钟开始，每20分钟（它和“3，23，43”）的含义一样  
“？”：字符仅被用于天（月）和天（星期）两个子表达式，表示不指定值  
当2个子表达式其中之一被指定了值以后，为了避免冲突，需要将另一个子表达式的值设为“？”  
“L”： 字符仅被用于天（月）和天（星期）两个子表达式，它是单词“last”的缩写  
但是它在两个子表达式里的含义是不同的。  
在天（月）子表达式中，“L”表示一个月的最后一天 , 
在天（星期）自表达式中，“L”表示一个星期的最后一天，也就是SAT  
如果在“L”前有具体的内容，它就具有其他的含义了  
例如：“6L”表示这个月的倒数第６天，“ＦＲＩＬ”表示这个月的最后一个星期五  
注意：在使用“L”参数时，不要指定列表或范围，因为这会导致问题 